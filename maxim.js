// Generated by CoffeeScript 2.0.0-beta2
var Maxim, MaximData;

MaximData = class MaximData {
  constructor() {}

  data() {}

  error() {}

  metadata() {}

};

Maxim = class Maxim {
  constructor(url, options) {
    this.connection = new WebSocket(url);
    this.columns = '';
    this.options = {};
    this.metadata = {};
    this.taskID = 0;
    this.messageListeners = [];
    this.errorListeners = [];
    this.openListeners = [];
    this.reopenListeners = [];
    this.closeListeners = [];
  }

  metadata(data) {
    return this.metadata = data;
  }

  execute(func, data) {
    var payload;
    payload = {
      tid: this.taskID,
      fun: func,
      col: this.columns,
      met: this.metadata,
      dat: data
    };
    this.connection.send(msgpack.encode(payload));
    return this.taskID++;
  }

  addListener(event, callback) {
    switch (event) {
      case 'message':
        this.messageListeners = array.push(this.messageListeners, callback);
        break;
      case 'close':
        this.closeListeners = array.push(this.closeListeners, callback);
        break;
      case 'open':
        this.openListeners = array.push(this.openListeners, callback);
        break;
      case 'reopen':
        this.reopenListeners = array.push(this.reopenListeners, callback);
        break;
      case 'error':
        this.errorListeners = array.push(this.errorListeners, callback);
    }
    return this;
  }

};
